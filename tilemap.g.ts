// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 . . . . . . . 2 . . . 2 . . . 
2 . 2 2 2 . . 2 . . . 2 . . . . 
2 . 2 . 2 2 2 . . . 2 . . . . . 
2 . 2 . . . . . . . . 2 . . . . 
2 . 2 . . 2 . . . . . . 2 . . . 
2 . 2 . 2 . . 2 . . . . . 2 . . 
2 . 2 . 2 . . . 2 . . . . 2 . . 
2 . 2 . 2 . . 2 . 2 . . . . 2 . 
2 . 2 . 2 . 2 . 2 . 2 . . . 2 . 
2 . 2 . 2 . . . . 2 . . . 2 . . 
2 . 2 . 2 2 2 2 2 . . . 2 . . . 
2 . 2 . 2 . . . . . . 2 . . . . 
2 . 2 . 2 . . . . . 2 . . . . . 
2 . . . 2 . . . . 2 . . . . . . 
2 . . . 2 . . . 2 . 2 2 2 2 2 2 
2 2 2 . 2 . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.castle.tileDarkGrass2,sprites.swamp.swampTile2,sprites.dungeon.collectibleInsignia,sprites.builtin.forestTiles0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
